<?php
/**
 * aheadWorks Co.
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the EULA
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://ecommerce.aheadworks.com/AW-LICENSE.txt
 *
 * =================================================================
 *                 MAGENTO EDITION USAGE NOTICE
 * =================================================================
 * This software is designed to work with Magento community edition and
 * its use on an edition other than specified is prohibited. aheadWorks does not
 * provide extension support in case of incorrect edition use.
 * =================================================================
 *
 * @category   AW
 * @package    AW_Collpur
 * @version    1.0.5
 * @copyright  Copyright (c) 2010-2012 aheadWorks Co. (http://www.aheadworks.com)
 * @license    http://ecommerce.aheadworks.com/AW-LICENSE.txt
 */
?>
<script type="text/javascript">

/*
* How to detect browser width
*/
$j(window).ready(function() {
	
			
		     
});
				
				
				</script>
	<script src="<?php echo Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_JS);?>aw_collpur/jquery.cbpContentSlider.min.js"></script>
	<script>
	
		jQuery( document ).ready(function() {
		
			/*
			- how to call the plugin:
			$( selector ).cbpContentSlider( [options] );
			- options:
			{
				// default transition speed (ms)
				speed : 500,
				// default transition easing
				easing : 'ease-in-out',
				// current item's index
				current : 0
			}
			- destroy:
			$( selector ).cbpContentSlider( 'destroy' );
			*/
			
			jQuery( '#cbp-contentslider' ).cbpContentSlider();

			;( function( $, window, undefined ) {
				console.log(123123);
				 
			    'use strict';
			 
			    // global
			    var Modernizr = window.Modernizr;
			 
			    $.CBPContentSlider = function( options, element ) {
			        this.$el = $( element );
			        this._init( options );
			    };
			 
			    // the options
			    $.CBPContentSlider.defaults = {
			        // default transition speed (ms)
			        speed : 500,
			        // default transition easing
			        easing : 'ease-in-out',
			        // current item´s index
			        current : 0
			    };
			 
			    $.CBPContentSlider.prototype = {
			        _init : function( options ) {
			 
			            // options
			            this.options = $.extend( true, {}, $.CBPContentSlider.defaults, options );
			            // the items
			            this.$items = this.$el.find( 'ul > li' ).hide();
			            // the tabs
			            this.$tabs = this.$el.find( 'nav > a' );
			            // total tabs
			            var tabsCount = this.$tabs.length;
			            // set each tab width
			            this.$tabs.css( 'width', 100 / tabsCount + '%' );
			            // current and old item´s index
			            this.current = this.options.current;
			            this.old = 0;
			            // check if the items are currently moving
			            this.isAnimating = false;
			            // support for CSS Transitions
			            this.support = Modernizr.csstransitions;
			            // transition end event name
			            var transEndEventNames = {
			                'WebkitTransition' : 'webkitTransitionEnd',
			                'MozTransition' : 'transitionend',
			                'OTransition' : 'oTransitionEnd',
			                'msTransition' : 'MSTransitionEnd',
			                'transition' : 'transitionend'
			            };
			            this.transEndEventName = transEndEventNames[ Modernizr.prefixed( 'transition' ) ] + '.cbpContentSlider';
			            // set the transition to the items
			            if( this.support ) {
			                this.$items.css( 'transition', 'left ' + this.options.speed + 'ms ' + this.options.easing );
			            }
			            // update current tab
			            this._updateTabs();
			            // show current item
			            this.$items.eq( this.current ).show();
			            // initialize/bind the events to the tabs
			            this._initEvents();
			 
			        },
			        _updateTabs : function() {
			            this.$tabs.eq( this.old ).removeClass( 'rc-active' ).end().eq( this.current ).addClass( 'rc-active' );
			        },
			        _initEvents : function() {
			 
			            var self = this;
			            this.$tabs.on( 'click.cbpContentSlider', function( event ) {
			             
			                var idx = $( this ).index();
			                 
			                if( idx !== self.current && !self.isAnimating ) {
			                     
			                    self.isAnimating = true;
			 
			                    var direction = idx > self.current ? 'right' : 'left',
			                        $oldItem = self.$items.eq( self.current ),
			                        $newItem = self.$items.eq( idx );
			                     
			                    // update current and old value
			                    self.old = self.current;
			                    self.current = idx;
			 
			                    // apply initial style..
			                    if( self.support ) {
			                        // translate might be more efficient here. Left out because of a rounding and rendering problem in Chrome (Version 24.0.1312.52)
			                        $newItem.css( 'left', direction === 'right' ? '100%' : '-100%' );
			                    }
			                    $newItem.show();
			 
			                    // ..and bind the transitionend event
			                    var transitionendfn = function() {
			                        $oldItem.off( self.transEndEventName ).hide();
			                        self.isAnimating = false;
			                    };
			 
			                    if( self.support ) {
			                        $oldItem.on( self.transEndEventName, transitionendfn );
			                    }
			                    else {
			                        transitionendfn.call();
			                    }
			                     
			                    // apply final style
			                    if( self.support ) {
			                        setTimeout( function() {
			                            // translate might be more efficient here. Left out because of a rounding and rendering problem in Chrome (Version 24.0.1312.52)
			                            $oldItem.css( 'left', direction === 'right' ? '-100%' : '100%' );
			                            $newItem.css( 'left', '0%' );
			                        }, 25 );
			                    }
			 
			                    // update current tab
			                    self._updateTabs();
			 
			                }
			 
			                event.preventDefault();
			 
			            } );
			 
			        },
			        destroy : function() {
			            if( this.support ) {
			                this.$items.css( 'transition', 'none' );
			            }
			            this.$items.css( 'left', 0 ).show();
			            this.$tabs.off( '.cbpContentSlider' ).removeClass( 'rc-active' );
			        }
			    };
			 
			    var logError = function( message ) {
			        if ( window.console ) {
			            window.console.error( message );
			        }
			    };
			 
			    $.fn.cbpContentSlider = function( options ) {
			        if ( typeof options === 'string' ) {
			            var args = Array.prototype.slice.call( arguments, 1 );
			            this.each(function() {
			                var instance = $.data( this, 'cbpContentSlider' );
			                if ( !instance ) {
			                    logError( "cannot call methods on cbpContentSlider prior to initialization; " +
			                    "attempted to call method '" + options + "'" );
			                    return;
			                }
			                if ( !$.isFunction( instance[options] ) || options.charAt(0) === "_" ) {
			                    logError( "no such method '" + options + "' for cbpContentSlider instance" );
			                    return;
			                }
			                instance[ options ].apply( instance, args );
			            });
			        } 
			        else {
			            this.each(function() {  
			                var instance = $.data( this, 'cbpContentSlider' );
			                if ( instance ) {
			                    instance._init();
			                }
			                else {
			                    instance = $.data( this, 'cbpContentSlider', new $.CBPContentSlider( options, this ) );
			                }
			            });
			        }
			        return this;
			    };
			 
			} )( jQuery, window );			
				
			 jQuery(window).resize(function() {
			 console.log(1);
				var wi = $j(window).width();
				
					if (wi <= 767) {
			 console.log(2);
						$j(".cbp-contentslider").css("height", $j( ".wrap_li_slider" ).height());
							
					};
				
			
			});       
			
			 console.log(3);
				var wi = $j(window).width();
				if (wi <= 767) {
					$j(".slider_img0").load(function(){
			 console.log($j( ".wrap_li_slider" ).height());
					$j(".cbp-contentslider").css("height", $j( ".cbp-contentslider .wrap_li_slider" ).height());
			 console.log(5);
					}); 
				}; 
			
			});
			
	</script>
<!--Big Slider-->
<?php $dealSliders = $this->getFeaturedSliders();
$i = 0;
$max = count($dealSliders); ?>

<div class="main">
	<div id="cbp-contentslider" class="cbp-contentslider">

	<ul>
		<?php
		$i = 0;
		//echo "<pre>";
		//var_dump($dealSliders);exit;
		foreach($dealSliders as $dealSlider){
		$url = Mage::getBaseUrl('media').'aw_collpur/deals/'.$dealSlider['deal_image_slider'];
		$product = $this->getProduct ( $dealSlider );
		$originalProduct = $this->getOriginalProduct ( $dealSlider );
		$dealInfo = $this->getDealPricesSpare ( $originalProduct, $product );
		?>
		<li id="slide<?php echo $i; ?>" class="wrap_li_slider">
			<img class="slider_img<?php echo $i; ?>" src="<?php echo $url; ?>"/>
			<div>
				<div class="cbp-content">					
					<div style="display: block; color: #fff; font-size: 16px; font-weight: bold; ">
						<div class="orbit-caption">
							<div class="column large-5 medium-5 small-5 desc_deals_slider2">
								<label>TODAY'S DEALS</label>
								<p class="judul_deals_slider"><?php echo $dealSlider->getDealName(); ?></p>
								<div class="price_deals_slider">
									<p><?php echo Mage::helper('core')->currency($dealSlider->getPrice(), true, false); ?></p>
										<div class="after_price">
											<?php if($originalProduct->getFinalPrice() > 0) echo "<p>".Mage::helper('core')->currency($originalProduct->getFinalPrice(), true, false)."</p>"; ?>
											<p><?php if($dealInfo->getPercentDiscount() <> "0") { echo $dealInfo->getPercentDiscount(); ?>% OFF<?php } ?></p>

										</div>
								</div>
							</div>
							<div class="column large-4 medium-4 small-4 date_slider_deals">
								<label>PROMO END IN:</label>
								<p><?php echo $this->getTimeLeftToBuy($dealSlider); ?></p>
								<p>hour(s) minute(s) second(s)</p>
								<p>SOLD: <span><?php echo $this->getPurchasesCount($dealSlider->getId()); ?></span></p>
							</div>
							<div class="column large-3 medium-3 small-3">
								<form action="<?php echo Mage::getUrl('checkout/cart/add', array('_secure'=>true,'product' => $dealSlider->getProduct()->getId(), 'deal_id' => $dealSlider->getId(), 'form_key' => Mage::getSingleton('core/session')->getFormKey())) ?>" method="post" class="right_detail_deals_slider" id="product_addtocart_form">
									<div class="awcp-buy-button ">
										<!-- POPUP -->
										<div id="awcp-popup-options<?php echo $dealSlider->getId(); ?>" style="display: none;" class="awcp-popup awcp-popup-shown">
											<div class="awcp-popup-top-left">
												<div class="awcp-popup-top-right"></div>
											</div>
											<div class="awcp-popup-center-left">
												<div class="awcp-popup-center-right">
													<div class="awcp-popup-content"><?php echo $this->getChildHtml('main_collpur_block'); ?></div>
												</div>
											</div>
											<div class="awcp-popup-bottom-left">
												<div class="awcp-popup-bottom-right">
													<button class="button awcp-button">
														<span><span><?php echo $this->__('BUY NOW'); ?></span></span>
													</button>
												</div>
											</div>
											<div class="awcp-popup-tail"></div>
										</div>
										<!-- popup -->
										<button class="button awcp-buy" <?php if ($this->hasOptions($dealSlider)): ?>onclick="Effect.toggle($('awcp-popup-options<?php echo $dealSlider->getId(); ?>'),'appear');return false;"<?php endif; ?>>
											<span><?php echo $this->__('BUY</br>NOW'); ?></span>
										</button>
									</div>
								</form>
							</div>
						</div>
					</div>
				</div>
			</div>
		</li>
		<?php
		$i++;
		}
		?>		

		</li>		
	</ul>
<!--Big Slider // End-->	
	<?php $dealSliders = $this->getFeaturedSliders();
		  $i = 0;
		  $max = count($dealSliders); ?>
	<!--Sidebar Thumbnail-->	  
	<nav class="thumb_angka_area">
		<?php
		$i = 1;
		//echo "<pre>";
		//var_dump($dealSliders);exit;
		foreach($dealSliders as $dealSlider){
		?>
						<a href="#slide<?php echo $i; ?>" class="thumb_angka">
						
			
						<?php echo $i; ?>
						</a>
		<?php
		$i++;
		}
		?>		
						</nav>
	<nav class="large_thumb">
	<?php
	$i = 0;
	foreach($dealSliders as $dealSlider){
	$url = Mage::getBaseUrl('media').'aw_collpur/deals/'.$dealSlider['deal_image'];
	$product = $this->getProduct ( $dealSlider );
	$originalProduct = $this->getOriginalProduct ( $dealSlider );
	$dealInfo = $this->getDealPricesSpare ( $originalProduct, $product );
	?>
		<a href="#slide<?php echo $i; ?>">
			<div u="thumb" class="slider_thumb_large" style="width: 100%; height: 100%; border: medium none; position: absolute;">
				<img class="i" src="<?php echo $url; ?>">
				<div class="t"><?php echo $dealSlider->getDealName(); ?></div>
				<div class="c"><?php if($dealInfo->getPercentDiscount() <> "0") { echo $dealInfo->getPercentDiscount(); ?>% OFF<?php } ?></div>
			</div>
		</a>
	<?php
	$i++;
	}
	?>
	</nav>
	<!--Sidebar Thumbnail // End-->
	</div>	
</div>	
<!--end slider 2-->